programa: PUBLIC CLASS ID ACHAVE FCHAVE WHILE 
##
## Ends in an error in state: 171.
##
## programa -> PUBLIC CLASS ID ACHAVE funcoes FCHAVE . EOF [ # ]
##
## The known suffix of the stack is as follows:
## PUBLIC CLASS ID ACHAVE funcoes FCHAVE 
##

Erro: nenhuma declaração de expressão ou comando deve ser feita após a declaração de programa.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC BOOLEAN ID APAR FPAR ACHAVE FCHAVE WHILE 
##
## Ends in an error in state: 173.
##
## funcoes -> declaracao_funcao . funcoes [ FCHAVE ]
##
## The known suffix of the stack is as follows:
## declaracao_funcao 
##

Erro: comandos ou expressões devem ser declarados dentro de funções.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE FOR APAR ID ATRIB READCHAR WHILE 
##
## Ends in an error in state: 122.
##
## cmd_for -> FOR APAR cmd_atrib . PTV expr PTV comando FPAR ACHAVE comandos FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## FOR APAR cmd_atrib 
##

Comando de atribuição mal formado. Faltou PTV.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE FOR APAR ID VEZESIGUAL ID PTV LITSTRING PTV RETURN FPAR ACHAVE RETURN PTV BREAK 
##
## Ends in an error in state: 129.
##
## cmd_for -> FOR APAR cmd_atrib PTV expr PTV comando FPAR ACHAVE comandos . FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## FOR APAR cmd_atrib PTV expr PTV comando FPAR ACHAVE comandos 
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 134, spurious reduction of production comandos -> 
## In state 135, spurious reduction of production comandos -> comando PTV comandos 
##

Faltou fechar o comando for.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE FOR APAR ID VEZESIGUAL ID PTV LITSTRING PTV RETURN FPAR ACHAVE VOID 
##
## Ends in an error in state: 128.
##
## cmd_for -> FOR APAR cmd_atrib PTV expr PTV comando FPAR ACHAVE . comandos FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## FOR APAR cmd_atrib PTV expr PTV comando FPAR ACHAVE 
##

<Faltou fechar o comando for.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE FOR APAR ID VEZESIGUAL ID PTV LITSTRING PTV RETURN FPAR WHILE 
##
## Ends in an error in state: 127.
##
## cmd_for -> FOR APAR cmd_atrib PTV expr PTV comando FPAR . ACHAVE comandos FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## FOR APAR cmd_atrib PTV expr PTV comando FPAR 
##

Faltou o corpo do for.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE FOR APAR ID VEZESIGUAL ID PTV LITSTRING PTV RETURN PTV 
##
## Ends in an error in state: 126.
##
## cmd_for -> FOR APAR cmd_atrib PTV expr PTV comando . FPAR ACHAVE comandos FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## FOR APAR cmd_atrib PTV expr PTV comando 
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 91, spurious reduction of production cmd_return -> RETURN 
## In state 138, spurious reduction of production comando -> cmd_return 
##

Faltou o ")". Esperava "for (inicializacao; expr; comando) { comandos }".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE FOR APAR ID VEZESIGUAL ID PTV LITSTRING PTV WHILE 
##
## Ends in an error in state: 125.
##
## cmd_for -> FOR APAR cmd_atrib PTV expr PTV . comando FPAR ACHAVE comandos FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## FOR APAR cmd_atrib PTV expr PTV 
##

Faltou o comando para incremento no for.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE FOR APAR ID VEZESIGUAL ID PTV LITSTRING WHILE 
##
## Ends in an error in state: 124.
##
## cmd_for -> FOR APAR cmd_atrib PTV expr . PTV comando FPAR ACHAVE comandos FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
## expr -> expr . OULOG expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIFER ]
## expr -> expr . ELOG expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIFER ]
## expr -> expr . IGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIFER ]
## expr -> expr . DIFER expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIFER ]
## expr -> expr . MAIOR expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIFER ]
## expr -> expr . MENOR expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIFER ]
## expr -> expr . MAIS expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIFER ]
## expr -> expr . MENOS expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIFER ]
## expr -> expr . VEZES expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIFER ]
## expr -> expr . DIV expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIFER ]
## expr -> expr . MOD expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DIV DIFER ]
##
## The known suffix of the stack is as follows:
## FOR APAR cmd_atrib PTV expr 
##

Expressão mal formada no for.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE FOR APAR ID VEZESIGUAL ID PTV WHILE 
##
## Ends in an error in state: 123.
##
## cmd_for -> FOR APAR cmd_atrib PTV . expr PTV comando FPAR ACHAVE comandos FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## FOR APAR cmd_atrib PTV 
##

Faltou expressão após comando de inicialização.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE FOR APAR ID WHILE 
##
## Ends in an error in state: 121.
##
## cmd_atrib -> ID . ATRIB expr [ PTV ]
## cmd_atrib -> ID . ATRIB READINT [ PTV ]
## cmd_atrib -> ID . ATRIB READFLOAT [ PTV ]
## cmd_atrib -> ID . ATRIB READSTRING [ PTV ]
## cmd_atrib -> ID . ATRIB READCHAR [ PTV ]
## cmd_atrib -> ID . MAISIGUAL expr [ PTV ]
## cmd_atrib -> ID . MENOSIGUAL expr [ PTV ]
## cmd_atrib -> ID . VEZESIGUAL expr [ PTV ]
## cmd_atrib -> ID . DIVIGUAL expr [ PTV ]
##
## The known suffix of the stack is as follows:
## ID 
##

Comando de inicialização mal formado. Deve ser comando de atribuição.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE FOR APAR WHILE 
##
## Ends in an error in state: 120.
##
## cmd_for -> FOR APAR . cmd_atrib PTV expr PTV comando FPAR ACHAVE comandos FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## FOR APAR 
##

Comando for mal formado Faltou inicialização. Esperafa "for (inicializacao; expressao; comando) { comandos }".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE FOR WHILE 
##
## Ends in an error in state: 119.
##
## cmd_for -> FOR . APAR cmd_atrib PTV expr PTV comando FPAR ACHAVE comandos FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## FOR 
##

Comando for mal formado. Esperafa "for (inicializacao; expressao; comando) { comandos }".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE ID ATRIB LITSTRING WHILE 
##
## Ends in an error in state: 118.
##
## cmd_atrib -> ID ATRIB expr . [ PTV FPAR ]
## expr -> expr . OULOG expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . ELOG expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . IGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIFER expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIOR expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOR expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIS expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOS expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . VEZES expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIV expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MOD expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
##
## The known suffix of the stack is as follows:
## ID ATRIB expr 
##

Expressão mal formada após "=".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE ID ATRIB WHILE 
##
## Ends in an error in state: 113.
##
## cmd_atrib -> ID ATRIB . expr [ PTV FPAR ]
## cmd_atrib -> ID ATRIB . READINT [ PTV FPAR ]
## cmd_atrib -> ID ATRIB . READFLOAT [ PTV FPAR ]
## cmd_atrib -> ID ATRIB . READSTRING [ PTV FPAR ]
## cmd_atrib -> ID ATRIB . READCHAR [ PTV FPAR ]
##
## The known suffix of the stack is as follows:
## ID ATRIB 
##

Faltou expressão após atribuição "=".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE ID DIVIGUAL LITSTRING WHILE 
##
## Ends in an error in state: 112.
##
## cmd_atrib -> ID DIVIGUAL expr . [ PTV FPAR ]
## expr -> expr . OULOG expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . ELOG expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . IGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIFER expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIOR expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOR expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIS expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOS expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . VEZES expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIV expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MOD expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
##
## The known suffix of the stack is as follows:
## ID DIVIGUAL expr 
##

Expressão invalida apos "/=".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE ID DIVIGUAL WHILE 
##
## Ends in an error in state: 111.
##
## cmd_atrib -> ID DIVIGUAL . expr [ PTV FPAR ]
##
## The known suffix of the stack is as follows:
## ID DIVIGUAL 
##

Faltou expressão após "/=".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE ID MAISIGUAL LITSTRING WHILE 
##
## Ends in an error in state: 110.
##
## cmd_atrib -> ID MAISIGUAL expr . [ PTV FPAR ]
## expr -> expr . OULOG expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . ELOG expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . IGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIFER expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIOR expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOR expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIS expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOS expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . VEZES expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIV expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MOD expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
##
## The known suffix of the stack is as follows:
## ID MAISIGUAL expr 
##

Expressão mal formada.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE ID MAISIGUAL WHILE 
##
## Ends in an error in state: 109.
##
## cmd_atrib -> ID MAISIGUAL . expr [ PTV FPAR ]
##
## The known suffix of the stack is as follows:
## ID MAISIGUAL 
##

Faltou expressão "+=".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE ID MENOSIGUAL LITSTRING WHILE 
##
## Ends in an error in state: 107.
##
## cmd_atrib -> ID MENOSIGUAL expr . [ PTV FPAR ]
## expr -> expr . OULOG expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . ELOG expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . IGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIFER expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIOR expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOR expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIS expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOS expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . VEZES expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIV expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MOD expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
##
## The known suffix of the stack is as follows:
## ID MENOSIGUAL expr 
##

Expressão invalida após "-=".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE ID MENOSIGUAL WHILE 
##
## Ends in an error in state: 106.
##
## cmd_atrib -> ID MENOSIGUAL . expr [ PTV FPAR ]
##
## The known suffix of the stack is as follows:
## ID MENOSIGUAL 
##

Faltou expressão após "-=".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE ID VEZESIGUAL LITSTRING WHILE 
##
## Ends in an error in state: 104.
##
## cmd_atrib -> ID VEZESIGUAL expr . [ PTV FPAR ]
## expr -> expr . OULOG expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . ELOG expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . IGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIFER expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIOR expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOR expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIS expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOS expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . VEZES expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIV expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MOD expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
##
## The known suffix of the stack is as follows:
## ID VEZESIGUAL expr 
##

Expressão mal delcarada após "*=".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE ID VEZESIGUAL WHILE 
##
## Ends in an error in state: 103.
##
## cmd_atrib -> ID VEZESIGUAL . expr [ PTV FPAR ]
##
## The known suffix of the stack is as follows:
## ID VEZESIGUAL 
##

Faltou expressão após "*=".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE ID WHILE 
##
## Ends in an error in state: 102.
##
## cmd_atrib -> ID . ATRIB expr [ PTV FPAR ]
## cmd_atrib -> ID . ATRIB READINT [ PTV FPAR ]
## cmd_atrib -> ID . ATRIB READFLOAT [ PTV FPAR ]
## cmd_atrib -> ID . ATRIB READSTRING [ PTV FPAR ]
## cmd_atrib -> ID . ATRIB READCHAR [ PTV FPAR ]
## cmd_atrib -> ID . MAISIGUAL expr [ PTV FPAR ]
## cmd_atrib -> ID . MENOSIGUAL expr [ PTV FPAR ]
## cmd_atrib -> ID . VEZESIGUAL expr [ PTV FPAR ]
## cmd_atrib -> ID . DIVIGUAL expr [ PTV FPAR ]
## cmd_decr -> ID . MENOSMENOS [ PTV FPAR ]
## cmd_incr -> ID . MAISMAIS [ PTV FPAR ]
##
## The known suffix of the stack is as follows:
## ID 
##

Identificador fora de expressão.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE IF APAR LITSTRING FPAR ACHAVE FCHAVE ELSE ACHAVE RETURN PTV BREAK 
##
## Ends in an error in state: 149.
##
## parte_else -> ELSE ACHAVE comandos . FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## ELSE ACHAVE comandos 
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 134, spurious reduction of production comandos -> 
## In state 135, spurious reduction of production comandos -> comando PTV comandos 
##

Faltou o "}" do comando else.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE IF APAR LITSTRING FPAR ACHAVE FCHAVE ELSE ACHAVE VOID 
##
## Ends in an error in state: 148.
##
## parte_else -> ELSE ACHAVE . comandos FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## ELSE ACHAVE 
##

Faltou fechar o comando else.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE IF APAR LITSTRING FPAR ACHAVE FCHAVE ELSE WHILE 
##
## Ends in an error in state: 147.
##
## parte_else -> ELSE . ACHAVE comandos FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
## parte_else -> ELSE . cmd_if [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## ELSE 
##

Faltou o corpo do else ou declaração de if.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE IF APAR LITSTRING FPAR ACHAVE FCHAVE VOID 
##
## Ends in an error in state: 146.
##
## cmd_if -> IF APAR expr FPAR ACHAVE comandos FCHAVE . parte_else [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## IF APAR expr FPAR ACHAVE comandos FCHAVE 
##

Erro desconhecido parte else.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE IF APAR LITSTRING FPAR ACHAVE RETURN PTV BREAK 
##
## Ends in an error in state: 145.
##
## cmd_if -> IF APAR expr FPAR ACHAVE comandos . FCHAVE parte_else [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## IF APAR expr FPAR ACHAVE comandos 
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 134, spurious reduction of production comandos -> 
## In state 135, spurious reduction of production comandos -> comando PTV comandos 
##

Faltou fechar o comando if com "}" (2).

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE IF APAR LITSTRING FPAR ACHAVE VOID 
##
## Ends in an error in state: 101.
##
## cmd_if -> IF APAR expr FPAR ACHAVE . comandos FCHAVE parte_else [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## IF APAR expr FPAR ACHAVE 
##

Faltou fechar o comando if com "}".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE IF APAR LITSTRING FPAR WHILE 
##
## Ends in an error in state: 100.
##
## cmd_if -> IF APAR expr FPAR . ACHAVE comandos FCHAVE parte_else [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## IF APAR expr FPAR 
##

Faltou o corpo do if.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE IF APAR LITSTRING WHILE 
##
## Ends in an error in state: 99.
##
## cmd_if -> IF APAR expr . FPAR ACHAVE comandos FCHAVE parte_else [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
## expr -> expr . OULOG expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . ELOG expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . IGUAL expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIFER expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIOR expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOR expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIS expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOS expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . VEZES expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIV expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MOD expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
##
## The known suffix of the stack is as follows:
## IF APAR expr 
##

Expressão mal declarada.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE IF APAR WHILE 
##
## Ends in an error in state: 98.
##
## cmd_if -> IF APAR . expr FPAR ACHAVE comandos FCHAVE parte_else [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## IF APAR 
##

Comando "if" mal declarado. Faltou expressão.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE IF WHILE 
##
## Ends in an error in state: 97.
##
## cmd_if -> IF . APAR expr FPAR ACHAVE comandos FCHAVE parte_else [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## IF 
##

Faltou "(" após o comando "if".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE PRINT APAR LITSTRING VIRG WHILE 
##
## Ends in an error in state: 74.
##
## seq_expr -> expr VIRG . seq_expr [ FPAR ]
##
## The known suffix of the stack is as follows:
## expr VIRG 
##

Faltou outra espressão ",".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE PRINT APAR LITSTRING WHILE 
##
## Ends in an error in state: 73.
##
## expr -> expr . OULOG expr [ VIRG VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . ELOG expr [ VIRG VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . IGUAL expr [ VIRG VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIFER expr [ VIRG VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIOR expr [ VIRG VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOR expr [ VIRG VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VIRG VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VIRG VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIS expr [ VIRG VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOS expr [ VIRG VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . VEZES expr [ VIRG VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIV expr [ VIRG VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MOD expr [ VIRG VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## seq_expr -> expr . [ FPAR ]
## seq_expr -> expr . VIRG seq_expr [ FPAR ]
##
## The known suffix of the stack is as follows:
## expr 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE PRINT APAR WHILE 
##
## Ends in an error in state: 94.
##
## cmd_print -> PRINT APAR . argumentos FPAR [ PTV FPAR ]
##
## The known suffix of the stack is as follows:
## PRINT APAR 
##

Comando print mal declarado. Faltou os parametros.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE PRINT WHILE 
##
## Ends in an error in state: 93.
##
## cmd_print -> PRINT . APAR argumentos FPAR [ PTV FPAR ]
##
## The known suffix of the stack is as follows:
## PRINT 
##

Comando print mal declarado.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN APAR LITSTRING WHILE 
##
## Ends in an error in state: 44.
##
## expr -> APAR expr . FPAR [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . OULOG expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . ELOG expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . IGUAL expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIFER expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIOR expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOR expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIS expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOS expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . VEZES expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIV expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MOD expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
##
## The known suffix of the stack is as follows:
## APAR expr 
##

Expressão inválida antes de ")".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN APAR WHILE 
##
## Ends in an error in state: 42.
##
## expr -> APAR . expr FPAR [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## APAR 
##

Faltou ")" após a expressão.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN FPAR 
##
## Ends in an error in state: 133.
##
## comandos -> comando . PTV comandos [ FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## comando 
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 91, spurious reduction of production cmd_return -> RETURN 
## In state 138, spurious reduction of production comando -> cmd_return 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN ID APAR WHILE 
##
## Ends in an error in state: 41.
##
## expr -> ID APAR . argumentos FPAR [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## ID APAR 
##

Chamada de função inválida. Os parâmetros são separados por ",".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN ID WHILE 
##
## Ends in an error in state: 40.
##
## expr -> ID . APAR argumentos FPAR [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## variavel -> ID . [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## ID 
##

Chamada de função inválida. Faltou os parâmetros "id( parametros )".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING DIFER LITSTRING WHILE 
##
## Ends in an error in state: 70.
##
## expr -> expr . OULOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . ELOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . IGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIFER expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr DIFER expr . [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . VEZES expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIV expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MOD expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr DIFER expr 
##

Expressão inválida após "!=".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING DIFER WHILE 
##
## Ends in an error in state: 69.
##
## expr -> expr DIFER . expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr DIFER 
##

O operador "!=" recebe dois operadores "a != b".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING DIV WHILE 
##
## Ends in an error in state: 53.
##
## expr -> expr DIV . expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr DIV 
##

O operador "/" recebe dois operadores "a / b".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING ELOG LITSTRING WHILE 
##
## Ends in an error in state: 68.
##
## expr -> expr . OULOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . ELOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr ELOG expr . [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . IGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIFER expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . VEZES expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIV expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MOD expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr ELOG expr 
##

Expressao invalida.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING ELOG WHILE 
##
## Ends in an error in state: 67.
##
## expr -> expr ELOG . expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr ELOG 
##

Operador "&&" recebe dois operadores. "a && b".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING IGUAL LITSTRING WHILE 
##
## Ends in an error in state: 66.
##
## expr -> expr . OULOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . ELOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . IGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr IGUAL expr . [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIFER expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . VEZES expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIV expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MOD expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr IGUAL expr 
##

Expressão inválida.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING IGUAL WHILE 
##
## Ends in an error in state: 65.
##
## expr -> expr IGUAL . expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr IGUAL 
##

O operador "==" recebe dois operadores. "a == b".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING MAIOR LITSTRING WHILE 
##
## Ends in an error in state: 64.
##
## expr -> expr . OULOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . ELOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . IGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIFER expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr MAIOR expr . [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . VEZES expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIV expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MOD expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr MAIOR expr 
##

Expressão inválida.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING MAIOR WHILE 
##
## Ends in an error in state: 63.
##
## expr -> expr MAIOR . expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr MAIOR 
##

Operador ">" esperava dois operadores "a > b".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING MAIORIGUAL LITSTRING WHILE 
##
## Ends in an error in state: 62.
##
## expr -> expr . OULOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . ELOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . IGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIFER expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr MAIORIGUAL expr . [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . VEZES expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIV expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MOD expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr MAIORIGUAL expr 
##

Exp invalida.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING MAIORIGUAL WHILE 
##
## Ends in an error in state: 61.
##
## expr -> expr MAIORIGUAL . expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr MAIORIGUAL 
##

O operador ">=" espera dois operadores. "a >= b".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING MAIS LITSTRING WHILE 
##
## Ends in an error in state: 58.
##
## expr -> expr . OULOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . ELOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . IGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIFER expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr MAIS expr . [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . VEZES expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIV expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MOD expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr MAIS expr 
##

Expressao invalida.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING MAIS WHILE 
##
## Ends in an error in state: 57.
##
## expr -> expr MAIS . expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr MAIS 
##

Expressao invalida.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING MENOR LITSTRING WHILE 
##
## Ends in an error in state: 60.
##
## expr -> expr . OULOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . ELOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . IGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIFER expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr MENOR expr . [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . VEZES expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIV expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MOD expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr MENOR expr 
##

Expressao invalida.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING MENOR WHILE 
##
## Ends in an error in state: 59.
##
## expr -> expr MENOR . expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr MENOR 
##

Faltou outra expressão.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING MENORIGUAL LITSTRING WHILE 
##
## Ends in an error in state: 56.
##
## expr -> expr . OULOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . ELOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . IGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIFER expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr MENORIGUAL expr . [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . VEZES expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIV expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MOD expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr MENORIGUAL expr 
##

Expressao invalida.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING MENORIGUAL WHILE 
##
## Ends in an error in state: 55.
##
## expr -> expr MENORIGUAL . expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr MENORIGUAL 
##

O operador "<=" necessita de dois operadores "op1 <= op2".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING MENOS LITSTRING WHILE 
##
## Ends in an error in state: 52.
##
## expr -> expr . OULOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . ELOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . IGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIFER expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr MENOS expr . [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . VEZES expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIV expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MOD expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr MENOS expr 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING MENOS WHILE 
##
## Ends in an error in state: 51.
##
## expr -> expr MENOS . expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr MENOS 
##

<O operador "-" necessita de dois operadores "op1 - op2".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING MOD WHILE 
##
## Ends in an error in state: 49.
##
## expr -> expr MOD . expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr MOD 
##

O operador "%%" necessita de dois operadores "op1 %% op2".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING OULOG LITSTRING WHILE 
##
## Ends in an error in state: 48.
##
## expr -> expr . OULOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr OULOG expr . [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . ELOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . IGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIFER expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . VEZES expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIV expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MOD expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr OULOG expr 
##

Expressao logica invalida.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING OULOG WHILE 
##
## Ends in an error in state: 47.
##
## expr -> expr OULOG . expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr OULOG 
##

O operador "||" necessita de dois operadores "op1 || op2".


programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING VEZES WHILE 
##
## Ends in an error in state: 45.
##
## expr -> expr VEZES . expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## expr VEZES 
##

O operador "*" necessita de dois operadores "op1 * op2".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN LITSTRING WHILE 
##
## Ends in an error in state: 92.
##
## cmd_return -> RETURN expr . [ PTV FPAR ]
## expr -> expr . OULOG expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . ELOG expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . IGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIFER expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIOR expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOR expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIS expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOS expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . VEZES expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIV expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MOD expr [ VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
##
## The known suffix of the stack is as follows:
## RETURN expr 
##

Expressão inválida após o return.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN MENOS WHILE 
##
## Ends in an error in state: 34.
##
## expr -> MENOS . expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## MENOS 
##

Erro: o operador "-" necessita de dois operadores "op1 - op2".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN NOT LITSTRING WHILE 
##
## Ends in an error in state: 79.
##
## expr -> expr . OULOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . ELOG expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . IGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIFER expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOR expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> NOT expr . [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOS expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . VEZES expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . DIV expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
## expr -> expr . MOD expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## NOT expr 
##

Expressão inválida após o "!".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN NOT WHILE 
##
## Ends in an error in state: 33.
##
## expr -> NOT . expr [ VIRG VEZES PTV OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## NOT 
##

Após o "!", faltou uma expressão.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN PTV BREAK 
##
## Ends in an error in state: 166.
##
## declaracao_funcao -> PUBLIC STATIC tipo ID APAR lista_parametros FPAR ACHAVE list(declaracao) comandos . FCHAVE [ PUBLIC FCHAVE ]
##
## The known suffix of the stack is as follows:
## PUBLIC STATIC tipo ID APAR lista_parametros FPAR ACHAVE list(declaracao) comandos 
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 134, spurious reduction of production comandos -> 
## In state 135, spurious reduction of production comandos -> comando PTV comandos 
##

Faltou fechar a função.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN PTV VOID 
##
## Ends in an error in state: 134.
##
## comandos -> comando PTV . comandos [ FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## comando PTV 
##

Após o comando, faltou o ";".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE RETURN WHILE 
##
## Ends in an error in state: 91.
##
## cmd_return -> RETURN . [ PTV FPAR ]
## cmd_return -> RETURN . expr [ PTV FPAR ]
##
## The known suffix of the stack is as follows:
## RETURN 
##

Após return, faltou ";" ou uma expressão.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE SWITCH APAR LITSTRING FPAR ACHAVE CASE LITSTRING DPTOS BREAK PTV WHILE 
##
## Ends in an error in state: 162.
##
## cases -> case . cases [ DEFAULT ]
##
## The known suffix of the stack is as follows:
## case 
##

cases -> case . cases [ DEFAULT ]

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE SWITCH APAR LITSTRING FPAR ACHAVE CASE LITSTRING DPTOS BREAK WHILE 
##
## Ends in an error in state: 154.
##
## case -> CASE expr DPTOS comandos BREAK . PTV [ DEFAULT CASE ]
##
## The known suffix of the stack is as follows:
## CASE expr DPTOS comandos BREAK 
##

Faltou ";" após o "break".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE SWITCH APAR LITSTRING FPAR ACHAVE CASE LITSTRING DPTOS RETURN PTV FCHAVE 
##
## Ends in an error in state: 153.
##
## case -> CASE expr DPTOS comandos . BREAK PTV [ DEFAULT CASE ]
##
## The known suffix of the stack is as follows:
## CASE expr DPTOS comandos 
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 134, spurious reduction of production comandos -> 
## In state 135, spurious reduction of production comandos -> comando PTV comandos 
##

Faltou "BREAK"?

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE SWITCH APAR LITSTRING FPAR ACHAVE CASE LITSTRING DPTOS VOID 
##
## Ends in an error in state: 90.
##
## case -> CASE expr DPTOS . comandos BREAK PTV [ DEFAULT CASE ]
##
## The known suffix of the stack is as follows:
## CASE expr DPTOS 
##

Falotu o break após os comandos.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE SWITCH APAR LITSTRING FPAR ACHAVE CASE LITSTRING WHILE 
##
## Ends in an error in state: 89.
##
## case -> CASE expr . DPTOS comandos BREAK PTV [ DEFAULT CASE ]
## expr -> expr . OULOG expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DPTOS DIV DIFER ]
## expr -> expr . ELOG expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DPTOS DIV DIFER ]
## expr -> expr . IGUAL expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DPTOS DIV DIFER ]
## expr -> expr . DIFER expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIOR expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOR expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DPTOS DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DPTOS DIV DIFER ]
## expr -> expr . MAIS expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DPTOS DIV DIFER ]
## expr -> expr . MENOS expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DPTOS DIV DIFER ]
## expr -> expr . VEZES expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DPTOS DIV DIFER ]
## expr -> expr . DIV expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DPTOS DIV DIFER ]
## expr -> expr . MOD expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL ELOG DPTOS DIV DIFER ]
##
## The known suffix of the stack is as follows:
## CASE expr 
##

Faltou dois pontos após a expressão do case.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE SWITCH APAR LITSTRING FPAR ACHAVE CASE WHILE 
##
## Ends in an error in state: 88.
##
## case -> CASE . expr DPTOS comandos BREAK PTV [ DEFAULT CASE ]
##
## The known suffix of the stack is as follows:
## CASE 
##

Case mal declarado. Faltou expressão.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE SWITCH APAR LITSTRING FPAR ACHAVE DEFAULT DPTOS RETURN PTV BREAK 
##
## Ends in an error in state: 160.
##
## cmd_switch -> SWITCH APAR expr FPAR ACHAVE cases default . FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## SWITCH APAR expr FPAR ACHAVE cases default 
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 134, spurious reduction of production comandos -> 
## In state 135, spurious reduction of production comandos -> comando PTV comandos 
## In state 159, spurious reduction of production default -> DEFAULT DPTOS comandos 
##

Comando switch não fechado. Faltou "}".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE SWITCH APAR LITSTRING FPAR ACHAVE DEFAULT DPTOS VOID 
##
## Ends in an error in state: 158.
##
## default -> DEFAULT DPTOS . comandos [ FCHAVE ]
##
## The known suffix of the stack is as follows:
## DEFAULT DPTOS 
##

Faltou ";"?

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE SWITCH APAR LITSTRING FPAR ACHAVE DEFAULT WHILE 
##
## Ends in an error in state: 157.
##
## default -> DEFAULT . DPTOS comandos [ FCHAVE ]
##
## The known suffix of the stack is as follows:
## DEFAULT 
##

Após default, esperava ":".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE SWITCH APAR LITSTRING FPAR ACHAVE WHILE 
##
## Ends in an error in state: 87.
##
## cmd_switch -> SWITCH APAR expr FPAR ACHAVE . cases default FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## SWITCH APAR expr FPAR ACHAVE 
##

Erro: faltou a declaração dos cases.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE SWITCH APAR LITSTRING FPAR WHILE 
##
## Ends in an error in state: 86.
##
## cmd_switch -> SWITCH APAR expr FPAR . ACHAVE cases default FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## SWITCH APAR expr FPAR 
##

Erro: faltou o corpo do switch.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE SWITCH APAR LITSTRING WHILE 
##
## Ends in an error in state: 85.
##
## cmd_switch -> SWITCH APAR expr . FPAR ACHAVE cases default FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
## expr -> expr . OULOG expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . ELOG expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . IGUAL expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIFER expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIOR expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOR expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIS expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOS expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . VEZES expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIV expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MOD expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
##
## The known suffix of the stack is as follows:
## SWITCH APAR expr 
##

Comando switch mal declarado. Esperava "switch (expressao) { cases }".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE SWITCH APAR WHILE 
##
## Ends in an error in state: 84.
##
## cmd_switch -> SWITCH APAR . expr FPAR ACHAVE cases default FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## SWITCH APAR 
##

Comando switch mal declarado. Esperava "switch (expressao) { cases }".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE SWITCH WHILE 
##
## Ends in an error in state: 83.
##
## cmd_switch -> SWITCH . APAR expr FPAR ACHAVE cases default FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## SWITCH 
##

Comando switch mal declarado. Esperava "switch (expressao) { cases }".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE VIRG 
##
## Ends in an error in state: 23.
##
## declaracao_funcao -> PUBLIC STATIC tipo ID APAR lista_parametros FPAR ACHAVE . list(declaracao) comandos FCHAVE [ PUBLIC FCHAVE ]
##
## The known suffix of the stack is as follows:
## PUBLIC STATIC tipo ID APAR lista_parametros FPAR ACHAVE 
##

Função não fechada.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE VOID ID PTV VIRG 
##
## Ends in an error in state: 168.
##
## list(declaracao) -> declaracao . list(declaracao) [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE ]
##
## The known suffix of the stack is as follows:
## declaracao 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE VOID ID VIRG WHILE 
##
## Ends in an error in state: 26.
##
## separated_nonempty_list(VIRG,ID) -> ID VIRG . separated_nonempty_list(VIRG,ID) [ PTV ]
##
## The known suffix of the stack is as follows:
## ID VIRG 
##

Erro: após "," esperava outro identificador para variável.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE VOID ID WHILE 
##
## Ends in an error in state: 25.
##
## separated_nonempty_list(VIRG,ID) -> ID . [ PTV ]
## separated_nonempty_list(VIRG,ID) -> ID . VIRG separated_nonempty_list(VIRG,ID) [ PTV ]
##
## The known suffix of the stack is as follows:
## ID 
##

Faltou ";" após declaração dos tipos.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE VOID WHILE 
##
## Ends in an error in state: 24.
##
## declaracao -> tipo . separated_nonempty_list(VIRG,ID) PTV [ WHILE VOID SWITCH STRING RETURN PRINT INT IF ID FOR FLOAT FCHAVE CHAR BOOLEAN ]
##
## The known suffix of the stack is as follows:
## tipo 
##

Erro: faltou o tipo das variáveis.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE WHILE APAR ID FPAR ACHAVE FCHAVE VOID 
##
## Ends in an error in state: 131.
##
## comandos -> comando_s . comandos [ FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## comando_s 
##

<YOUR SYNTAX ERROR MESSAGE HERE>

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE WHILE APAR LITSTRING FPAR ACHAVE RETURN PTV BREAK 
##
## Ends in an error in state: 164.
##
## cmd_while -> WHILE APAR expr FPAR ACHAVE comandos . FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## WHILE APAR expr FPAR ACHAVE comandos 
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 134, spurious reduction of production comandos -> 
## In state 135, spurious reduction of production comandos -> comando PTV comandos 
##

Comando while mal declarado. Esperava "while (expressão) { comandos... }". O comando while não foi fechado.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE WHILE APAR LITSTRING FPAR ACHAVE VOID 
##
## Ends in an error in state: 82.
##
## cmd_while -> WHILE APAR expr FPAR ACHAVE . comandos FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## WHILE APAR expr FPAR ACHAVE 
##

Comando while mal declarado. Esperava "while (expressão) { comandos... }". O comando while não foi fechado.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE WHILE APAR LITSTRING FPAR WHILE 
##
## Ends in an error in state: 81.
##
## cmd_while -> WHILE APAR expr FPAR . ACHAVE comandos FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## WHILE APAR expr FPAR 
##

Comando while mal declarado, Faltou o corpo do while. Esperava "while (expressão) { comandos... }".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE WHILE APAR LITSTRING WHILE 
##
## Ends in an error in state: 80.
##
## cmd_while -> WHILE APAR expr . FPAR ACHAVE comandos FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
## expr -> expr . OULOG expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . ELOG expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . IGUAL expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIFER expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIOR expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOR expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIORIGUAL expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENORIGUAL expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MAIS expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MENOS expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . VEZES expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . DIV expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
## expr -> expr . MOD expr [ VEZES OULOG MOD MENOS MENORIGUAL MENOR MAIS MAIORIGUAL MAIOR IGUAL FPAR ELOG DIV DIFER ]
##
## The known suffix of the stack is as follows:
## WHILE APAR expr 
##

Comando while mal declarado. Esperava "while (expressão) { comandos... }".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE WHILE APAR WHILE 
##
## Ends in an error in state: 32.
##
## cmd_while -> WHILE APAR . expr FPAR ACHAVE comandos FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## WHILE APAR 
##

Comando while mal declarado. Esperava "while (expressão) { comandos... }".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR ACHAVE WHILE WHILE 
##
## Ends in an error in state: 31.
##
## cmd_while -> WHILE . APAR expr FPAR ACHAVE comandos FCHAVE [ WHILE SWITCH RETURN PRINT IF ID FOR FCHAVE BREAK ]
##
## The known suffix of the stack is as follows:
## WHILE 
##

Comando while mal declarado. Esperava "while (expressão) { comandos... }".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR FPAR WHILE 
##
## Ends in an error in state: 22.
##
## declaracao_funcao -> PUBLIC STATIC tipo ID APAR lista_parametros FPAR . ACHAVE list(declaracao) comandos FCHAVE [ PUBLIC FCHAVE ]
##
## The known suffix of the stack is as follows:
## PUBLIC STATIC tipo ID APAR lista_parametros FPAR 
##

Erro: faltou o corpo da função.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR VOID ID VIRG WHILE 
##
## Ends in an error in state: 19.
##
## lista_parametros -> parametro VIRG . lista_parametros [ FPAR ]
##
## The known suffix of the stack is as follows:
## parametro VIRG 
##

Erro: Após "," esperava outro parâmetro do tipo "tipo identificador".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR VOID ID WHILE 
##
## Ends in an error in state: 18.
##
## lista_parametros -> parametro . [ FPAR ]
## lista_parametros -> parametro . VIRG lista_parametros [ FPAR ]
##
## The known suffix of the stack is as follows:
## parametro 
##

Esperava ")" após declaração de parâmetros.

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR VOID WHILE 
##
## Ends in an error in state: 16.
##
## parametro -> tipo . ID [ VIRG FPAR ]
##
## The known suffix of the stack is as follows:
## tipo 
##

Erro: Tipo mal declarado (16). Esperava "tipo identificador".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID APAR WHILE 
##
## Ends in an error in state: 15.
##
## declaracao_funcao -> PUBLIC STATIC tipo ID APAR . lista_parametros FPAR ACHAVE list(declaracao) comandos FCHAVE [ PUBLIC FCHAVE ]
##
## The known suffix of the stack is as follows:
## PUBLIC STATIC tipo ID APAR 
##

Erro: declaração de função inválida (15). Esperava "public static tipo nome ( params ) {}".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID ID WHILE 
##
## Ends in an error in state: 14.
##
## declaracao_funcao -> PUBLIC STATIC tipo ID . APAR lista_parametros FPAR ACHAVE list(declaracao) comandos FCHAVE [ PUBLIC FCHAVE ]
##
## The known suffix of the stack is as follows:
## PUBLIC STATIC tipo ID 
##

Erro: declaração de função inválida (14). Esperava "public static tipo nome ( params ) {}".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC VOID WHILE 
##
## Ends in an error in state: 13.
##
## declaracao_funcao -> PUBLIC STATIC tipo . ID APAR lista_parametros FPAR ACHAVE list(declaracao) comandos FCHAVE [ PUBLIC FCHAVE ]
##
## The known suffix of the stack is as follows:
## PUBLIC STATIC tipo 
##

Erro: declaração de função inválida (13). Esperava "public static tipo nome ( params ) {}".

programa: PUBLIC CLASS ID ACHAVE PUBLIC STATIC WHILE 
##
## Ends in an error in state: 6.
##
## declaracao_funcao -> PUBLIC STATIC . tipo ID APAR lista_parametros FPAR ACHAVE list(declaracao) comandos FCHAVE [ PUBLIC FCHAVE ]
##
## The known suffix of the stack is as follows:
## PUBLIC STATIC 
##

Erro: declaração de função inválida (6). Esperava "public static tipo nome ( params ) {}".

programa: PUBLIC CLASS ID ACHAVE PUBLIC WHILE 
##
## Ends in an error in state: 5.
##
## declaracao_funcao -> PUBLIC . STATIC tipo ID APAR lista_parametros FPAR ACHAVE list(declaracao) comandos FCHAVE [ PUBLIC FCHAVE ]
##
## The known suffix of the stack is as follows:
## PUBLIC 
##

Erro: declaração de função inválida (5). Esperava "public static tipo nome ( params ) {}".

programa: PUBLIC CLASS ID ACHAVE WHILE 
##
## Ends in an error in state: 4.
##
## programa -> PUBLIC CLASS ID ACHAVE . funcoes FCHAVE EOF [ # ]
##
## The known suffix of the stack is as follows:
## PUBLIC CLASS ID ACHAVE 
##

Erro: Declaração de programa inválida (4). Exemplo: public class Exemplo { }

programa: PUBLIC CLASS ID WHILE 
##
## Ends in an error in state: 3.
##
## programa -> PUBLIC CLASS ID . ACHAVE funcoes FCHAVE EOF [ # ]
##
## The known suffix of the stack is as follows:
## PUBLIC CLASS ID 
##

Erro: Declaração de programa inválida (3). Exemplo: public class Exemplo { }

programa: PUBLIC CLASS WHILE 
##
## Ends in an error in state: 2.
##
## programa -> PUBLIC CLASS . ID ACHAVE funcoes FCHAVE EOF [ # ]
##
## The known suffix of the stack is as follows:
## PUBLIC CLASS 
##

Erro: Declaração de programa inválida (2). Exemplo: public class Exemplo { }

programa: PUBLIC WHILE 
##
## Ends in an error in state: 1.
##
## programa -> PUBLIC . CLASS ID ACHAVE funcoes FCHAVE EOF [ # ]
##
## The known suffix of the stack is as follows:
## PUBLIC 
##

Erro: Declaração de programa inválida (1). Exemplo: public class Exemplo { }

programa: WHILE 
##
## Ends in an error in state: 0.
##
## programa' -> . programa [ # ]
##
## The known suffix of the stack is as follows:
## 
##

Erro: Declaração de programa inválida (0). Exemplo: public class Exemplo { }

